-- SQLSpec Migration
-- Version: 0001
-- Description: Cymball Coffee Products
-- Created: 2025-10-19T20:42:18.358307+00:00
-- Author: Cody Fincher <cody@litestar.dev>

-- name: migrate-0001-up
CREATE TABLE product (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    name VARCHAR2(255) NOT NULL,
    description VARCHAR2(4000),
    price NUMBER(10, 2),
    category VARCHAR2(100),
    sku VARCHAR2(100) UNIQUE,
    in_stock BOOLEAN DEFAULT TRUE,
    metadata JSON,
    embedding VECTOR(768, FLOAT32),
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT ON NULL FOR INSERT AND UPDATE CURRENT_TIMESTAMP NOT NULL
);

COMMENT ON TABLE product IS 'Products with vector embeddings for semantic search';
COMMENT ON COLUMN product.embedding IS '768-dimensional vector for Vertex AI text-embedding-004';
COMMENT ON COLUMN product.in_stock IS 'Boolean: true=in stock, false=out of stock';


-- Store locations for coffee shop finder
CREATE TABLE store (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    name VARCHAR2(255) NOT NULL,
    address VARCHAR2(500) NOT NULL,
    city VARCHAR2(100),
    state VARCHAR2(50),
    zip VARCHAR2(20),
    phone VARCHAR2(50),
    hours JSON,
    metadata JSON,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT ON NULL FOR INSERT AND UPDATE CURRENT_TIMESTAMP NOT NULL
);

COMMENT ON TABLE store IS 'Coffee shop store locations';
COMMENT ON COLUMN store.hours IS 'Business hours by day: {"monday": "7am-9pm", ...}';
COMMENT ON COLUMN store.metadata IS 'Additional store metadata in JSON format';


-- Response cache for LLM responses
CREATE TABLE response_cache (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    cache_key VARCHAR2(255) UNIQUE NOT NULL,
    response_data JSON NOT NULL,
    expires_at TIMESTAMP WITH TIME ZONE,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT ON NULL FOR INSERT AND UPDATE CURRENT_TIMESTAMP NOT NULL
)  INMEMORY PRIORITY HIGH;

COMMENT ON TABLE response_cache IS 'Cached LLM responses to reduce API calls';
COMMENT ON COLUMN response_cache.cache_key IS 'Hash of query + context for cache lookup';


-- Embedding cache for vector embeddings
CREATE TABLE embedding_cache (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    text_hash VARCHAR2(255) NOT NULL,
    embedding VECTOR(768, FLOAT32) NOT NULL,
    model VARCHAR2(100) NOT NULL,
    hit_count NUMBER DEFAULT 0,
    last_accessed TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT embedding_cache_uk UNIQUE (text_hash, model)
)  INMEMORY PRIORITY HIGH;

COMMENT ON TABLE embedding_cache IS 'Cached embeddings to reduce Vertex AI API calls';
COMMENT ON COLUMN embedding_cache.text_hash IS 'MD5 hash of input text';
COMMENT ON COLUMN embedding_cache.embedding IS '768-dimensional embedding vector';


-- Intent exemplars for vector-based intent classification
CREATE TABLE intent_exemplar (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    intent VARCHAR2(100) NOT NULL,
    phrase VARCHAR2(1000) NOT NULL,
    embedding VECTOR(768, FLOAT32) NOT NULL,
    confidence_threshold NUMBER(3, 2) DEFAULT 0.7,
    usage_count NUMBER DEFAULT 0,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT ON NULL FOR INSERT AND UPDATE CURRENT_TIMESTAMP NOT NULL,
    CONSTRAINT intent_exemplar_uk UNIQUE (intent, phrase)
)  INMEMORY PRIORITY HIGH;

COMMENT ON TABLE intent_exemplar IS 'Intent classification training examples with embeddings';
COMMENT ON COLUMN intent_exemplar.confidence_threshold IS 'Minimum similarity score for this exemplar to match';


-- Search metrics for performance tracking
CREATE TABLE search_metric (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    query_id VARCHAR2(255) NOT NULL,
    user_id VARCHAR2(255),
    search_time_ms NUMBER,
    embedding_time_ms NUMBER,
    oracle_time_ms NUMBER,
    ai_time_ms NUMBER DEFAULT 0,
    intent_time_ms NUMBER DEFAULT 0,
    similarity_score NUMBER,
    result_count NUMBER,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT ON NULL FOR INSERT AND UPDATE CURRENT_TIMESTAMP NOT NULL
);

COMMENT ON TABLE search_metric IS 'Search performance metrics for vector search operations';
COMMENT ON COLUMN search_metric.query_id IS 'Unique identifier for each search query';
COMMENT ON COLUMN search_metric.user_id IS 'User or session performing the search';
COMMENT ON COLUMN search_metric.search_time_ms IS 'Total search time in milliseconds';
COMMENT ON COLUMN search_metric.embedding_time_ms IS 'Vertex AI embedding generation time in milliseconds';
COMMENT ON COLUMN search_metric.oracle_time_ms IS 'Oracle vector search time in milliseconds';
COMMENT ON COLUMN search_metric.similarity_score IS 'Average similarity score of search results';


-- Indexes for performance optimization

-- Vector similarity search indexes for product embeddings
CREATE VECTOR INDEX product_embedding_idx ON product (embedding)
ORGANIZATION NEIGHBOR PARTITIONS
DISTANCE COSINE
WITH TARGET ACCURACY 95;

-- Vector similarity index for intent exemplar embeddings
CREATE VECTOR INDEX intent_exemplar_embedding_idx ON intent_exemplar (embedding)
ORGANIZATION NEIGHBOR PARTITIONS
DISTANCE COSINE
WITH TARGET ACCURACY 95;
CREATE VECTOR INDEX embedding_cache_embedding_idx ON embedding_cache (embedding)
ORGANIZATION NEIGHBOR PARTITIONS
DISTANCE COSINE
WITH TARGET ACCURACY 95;




-- Standard B-tree indexes for product table
CREATE INDEX product_category_idx ON product (category);
CREATE INDEX product_in_stock_idx ON product (in_stock);
CREATE INDEX product_created_at_idx ON product (created_at);


-- Store indexes for location queries
CREATE INDEX store_city_idx ON store (city);
CREATE INDEX store_state_idx ON store (state);
CREATE INDEX store_zip_idx ON store (zip);


-- Cache indexes for expiration and lookup
CREATE INDEX response_cache_expires_at_idx ON response_cache (expires_at);
CREATE INDEX response_cache_created_at_idx ON response_cache (created_at);


-- Embedding cache indexes
CREATE INDEX embedding_cache_model_idx ON embedding_cache (model);
CREATE INDEX embedding_cache_created_at_idx ON embedding_cache (created_at);
CREATE INDEX embedding_cache_hit_count_idx ON embedding_cache (hit_count DESC);
CREATE INDEX embedding_cache_last_accessed_idx ON embedding_cache (last_accessed DESC);


-- Intent exemplar indexes
CREATE INDEX intent_exemplar_intent_idx ON intent_exemplar (intent);
CREATE INDEX intent_exemplar_usage_count_idx ON intent_exemplar (usage_count DESC);


-- Search metrics indexes
CREATE INDEX search_metric_query_id_idx ON search_metric (query_id);
CREATE INDEX search_metric_user_id_idx ON search_metric (user_id);
CREATE INDEX search_metric_created_at_idx ON search_metric (created_at);
CREATE INDEX search_metric_similarity_idx ON search_metric (similarity_score);


-- Oracle Text indexes for full-text search on product
BEGIN
    CTX_DDL.CREATE_PREFERENCE('product_lexer', 'BASIC_LEXER');
    CTX_DDL.SET_ATTRIBUTE('product_lexer', 'index_text', 'YES');
END;

CREATE INDEX product_name_text_idx ON product (name)
INDEXTYPE IS CTXSYS.CONTEXT
PARAMETERS ('LEXER product_lexer SYNC (ON COMMIT)');

CREATE INDEX product_description_text_idx ON product (description)
INDEXTYPE IS CTXSYS.CONTEXT
PARAMETERS ('LEXER product_lexer SYNC (ON COMMIT)');


-- name: migrate-0001-down

-- Drop Oracle Text indexes
BEGIN
    EXECUTE IMMEDIATE 'DROP INDEX product_description_text_idx';
EXCEPTION
    WHEN OTHERS THEN NULL;
END;

BEGIN
    EXECUTE IMMEDIATE 'DROP INDEX product_name_text_idx';
EXCEPTION
    WHEN OTHERS THEN NULL;
END;

BEGIN CTX_DDL.DROP_PREFERENCE('product_lexer'); EXCEPTION WHEN OTHERS THEN NULL; END;


-- Drop search metric indexes
BEGIN EXECUTE IMMEDIATE 'DROP INDEX search_metric_similarity_idx'; EXCEPTION WHEN OTHERS THEN NULL; END;

BEGIN EXECUTE IMMEDIATE 'DROP INDEX search_metric_created_at_idx'; EXCEPTION WHEN OTHERS THEN NULL; END;

BEGIN EXECUTE IMMEDIATE 'DROP INDEX search_metric_user_id_idx'; EXCEPTION WHEN OTHERS THEN NULL; END;

BEGIN EXECUTE IMMEDIATE 'DROP INDEX search_metric_query_id_idx'; EXCEPTION WHEN OTHERS THEN NULL; END;

BEGIN EXECUTE IMMEDIATE 'DROP INDEX intent_exemplar_usage_count_idx'; EXCEPTION WHEN OTHERS THEN NULL; END;

BEGIN EXECUTE IMMEDIATE 'DROP INDEX intent_exemplar_intent_idx'; EXCEPTION WHEN OTHERS THEN NULL; END;


-- Drop embedding cache indexes
BEGIN EXECUTE IMMEDIATE 'DROP INDEX embedding_cache_last_accessed_idx'; EXCEPTION WHEN OTHERS THEN NULL; END;

BEGIN EXECUTE IMMEDIATE 'DROP INDEX embedding_cache_hit_count_idx'; EXCEPTION WHEN OTHERS THEN NULL; END;

BEGIN EXECUTE IMMEDIATE 'DROP INDEX embedding_cache_created_at_idx'; EXCEPTION WHEN OTHERS THEN NULL; END;

BEGIN EXECUTE IMMEDIATE 'DROP INDEX embedding_cache_model_idx'; EXCEPTION WHEN OTHERS THEN NULL; END;


-- Drop response cache indexes
BEGIN EXECUTE IMMEDIATE 'DROP INDEX response_cache_created_at_idx'; EXCEPTION WHEN OTHERS THEN NULL; END;

BEGIN EXECUTE IMMEDIATE 'DROP INDEX response_cache_expires_at_idx'; EXCEPTION WHEN OTHERS THEN NULL; END;


-- Drop product indexes
BEGIN EXECUTE IMMEDIATE 'DROP INDEX product_created_at_idx'; EXCEPTION WHEN OTHERS THEN NULL; END;

BEGIN EXECUTE IMMEDIATE 'DROP INDEX product_in_stock_idx'; EXCEPTION WHEN OTHERS THEN NULL; END;

BEGIN EXECUTE IMMEDIATE 'DROP INDEX product_category_idx'; EXCEPTION WHEN OTHERS THEN NULL; END;

BEGIN EXECUTE IMMEDIATE 'DROP INDEX store_zip_idx'; EXCEPTION WHEN OTHERS THEN NULL; END;

BEGIN EXECUTE IMMEDIATE 'DROP INDEX store_state_idx'; EXCEPTION WHEN OTHERS THEN NULL; END;

BEGIN EXECUTE IMMEDIATE 'DROP INDEX store_city_idx'; EXCEPTION WHEN OTHERS THEN NULL; END;


BEGIN EXECUTE IMMEDIATE 'DROP INDEX intent_exemplar_embedding_idx'; EXCEPTION WHEN OTHERS THEN NULL; END;

BEGIN EXECUTE IMMEDIATE 'DROP INDEX product_embedding_idx'; EXCEPTION WHEN OTHERS THEN NULL; END;

BEGIN EXECUTE IMMEDIATE 'DROP INDEX embedding_cache_embedding_idx'; EXCEPTION WHEN OTHERS THEN NULL; END;



BEGIN EXECUTE IMMEDIATE 'DROP TABLE search_metric PURGE'; EXCEPTION WHEN OTHERS THEN NULL; END;

BEGIN EXECUTE IMMEDIATE 'DROP TABLE intent_exemplar PURGE'; EXCEPTION WHEN OTHERS THEN NULL; END;

BEGIN EXECUTE IMMEDIATE 'DROP TABLE embedding_cache PURGE'; EXCEPTION WHEN OTHERS THEN NULL; END;

BEGIN EXECUTE IMMEDIATE 'DROP TABLE response_cache PURGE'; EXCEPTION WHEN OTHERS THEN NULL; END;

BEGIN EXECUTE IMMEDIATE 'DROP TABLE store PURGE'; EXCEPTION WHEN OTHERS THEN NULL; END;

BEGIN EXECUTE IMMEDIATE 'DROP TABLE product PURGE'; EXCEPTION WHEN OTHERS THEN NULL; END;
