# type: ignore
"""Initial migration without map fields

Revision ID: 3c58ba75b218
Revises: 
Create Date: 2025-06-11 14:22:31.836729+00:00

"""
from __future__ import annotations

import warnings
from typing import TYPE_CHECKING

import sqlalchemy as sa
from alembic import op
from advanced_alchemy.types import EncryptedString, EncryptedText, GUID, ORA_JSONB, DateTimeUTC
from sqlalchemy import Text  # noqa: F401
from sqlalchemy.dialects import oracle
if TYPE_CHECKING:
    from collections.abc import Sequence

__all__ = ["downgrade", "upgrade", "schema_upgrades", "schema_downgrades", "data_upgrades", "data_downgrades"]

sa.GUID = GUID
sa.DateTimeUTC = DateTimeUTC
sa.ORA_JSONB = ORA_JSONB
sa.EncryptedString = EncryptedString
sa.EncryptedText = EncryptedText

# revision identifiers, used by Alembic.
revision = '3c58ba75b218'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    with warnings.catch_warnings():
        warnings.filterwarnings("ignore", category=UserWarning)
        with op.get_context().autocommit_block():
            schema_upgrades()
            data_upgrades()

def downgrade() -> None:
    with warnings.catch_warnings():
        warnings.filterwarnings("ignore", category=UserWarning)
        with op.get_context().autocommit_block():
            data_downgrades()
            schema_downgrades()

def schema_upgrades() -> None:
    """schema upgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('app_config',
    sa.Column('id', sa.GUID(length=16), nullable=False),
    sa.Column('key', sa.String(length=256), nullable=False),
    sa.Column('value', sa.ORA_JSONB(), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('sa_orm_sentinel', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTimeUTC(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_app_config'))
    )
    with op.batch_alter_table('app_config', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_app_config_key'), ['key'], unique=True)

    op.create_table('company',
    sa.Column('id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTimeUTC(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_company'))
    )
    op.create_table('response_cache',
    sa.Column('id', sa.GUID(length=16), nullable=False),
    sa.Column('cache_key', sa.String(length=256), nullable=False),
    sa.Column('query_text', sa.String(length=4000), nullable=True),
    sa.Column('response', sa.ORA_JSONB(), nullable=False),
    sa.Column('expires_at', sa.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('hit_count', sa.Integer(), nullable=False),
    sa.Column('sa_orm_sentinel', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTimeUTC(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_response_cache'))
    )
    with op.batch_alter_table('response_cache', schema=None) as batch_op:
        batch_op.create_index('ix_cache_expires', ['expires_at'], unique=False)
        batch_op.create_index('ix_cache_key_expires', ['cache_key', 'expires_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_response_cache_cache_key'), ['cache_key'], unique=True)

    op.create_table('search_metrics',
    sa.Column('id', sa.GUID(length=16), nullable=False),
    sa.Column('query_id', sa.String(length=128), nullable=False),
    sa.Column('user_id', sa.String(length=128), nullable=True),
    sa.Column('search_time_ms', sa.Float(), nullable=False),
    sa.Column('embedding_time_ms', sa.Float(), nullable=False),
    sa.Column('oracle_time_ms', sa.Float(), nullable=False),
    sa.Column('similarity_score', sa.Float(), nullable=True),
    sa.Column('result_count', sa.Integer(), nullable=False),
    sa.Column('sa_orm_sentinel', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTimeUTC(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_search_metrics'))
    )
    with op.batch_alter_table('search_metrics', schema=None) as batch_op:
        batch_op.create_index('ix_metrics_time', ['created_at', 'search_time_ms'], unique=False)
        batch_op.create_index('ix_metrics_user_time', ['user_id', 'created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_search_metrics_query_id'), ['query_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_search_metrics_user_id'), ['user_id'], unique=False)

    op.create_table('shop',
    sa.Column('id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('address', sa.String(length=1000), nullable=False),
    sa.Column('created_at', sa.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTimeUTC(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_shop'))
    )
    op.create_table('user_session',
    sa.Column('id', sa.GUID(length=16), nullable=False),
    sa.Column('session_id', sa.String(length=128), nullable=False),
    sa.Column('user_id', sa.String(length=128), nullable=False),
    sa.Column('data', sa.ORA_JSONB(), nullable=False),
    sa.Column('expires_at', sa.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('sa_orm_sentinel', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTimeUTC(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user_session'))
    )
    with op.batch_alter_table('user_session', schema=None) as batch_op:
        batch_op.create_index('ix_session_expires', ['expires_at'], unique=False)
        batch_op.create_index('ix_session_user_expires', ['user_id', 'expires_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_session_session_id'), ['session_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_user_session_user_id'), ['user_id'], unique=False)

    op.create_table('chat_conversation',
    sa.Column('id', sa.GUID(length=16), nullable=False),
    sa.Column('session_id', sa.GUID(length=16), nullable=False),
    sa.Column('user_id', sa.String(length=128), nullable=False),
    sa.Column('role', sa.String(length=20), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('message_metadata', sa.ORA_JSONB(), nullable=False),
    sa.Column('sa_orm_sentinel', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTimeUTC(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['session_id'], ['user_session.id'], name=op.f('fk_chat_conversation_session_id_user_session'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_chat_conversation'))
    )
    with op.batch_alter_table('chat_conversation', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_chat_conversation_user_id'), ['user_id'], unique=False)
        batch_op.create_index('ix_chat_session_time', ['session_id', 'created_at'], unique=False)
        batch_op.create_index('ix_chat_user_time', ['user_id', 'created_at'], unique=False)

    op.create_table('product',
    sa.Column('id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=False),
    sa.Column('company_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('current_price', sa.Float(), nullable=False),
    sa.Column('size', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=2000), nullable=False),
    sa.Column('embedding', oracle.VECTOR(dim=768), nullable=True),
    sa.Column('created_at', sa.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTimeUTC(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], name=op.f('fk_product_company_id_company'), ondelete='cascade'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_product'))
    )
    op.create_table('inventory',
    sa.Column('id', sa.GUID(length=16), nullable=False),
    sa.Column('shop_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=False),
    sa.Column('product_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=False),
    sa.Column('sa_orm_sentinel', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTimeUTC(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], name=op.f('fk_inventory_product_id_product'), ondelete='cascade'),
    sa.ForeignKeyConstraint(['shop_id'], ['shop.id'], name=op.f('fk_inventory_shop_id_shop'), ondelete='cascade'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_inventory'))
    )
    # ### end Alembic commands ###

def schema_downgrades() -> None:
    """schema downgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('inventory')
    op.drop_table('product')
    with op.batch_alter_table('chat_conversation', schema=None) as batch_op:
        batch_op.drop_index('ix_chat_user_time')
        batch_op.drop_index('ix_chat_session_time')
        batch_op.drop_index(batch_op.f('ix_chat_conversation_user_id'))

    op.drop_table('chat_conversation')
    with op.batch_alter_table('user_session', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_session_user_id'))
        batch_op.drop_index(batch_op.f('ix_user_session_session_id'))
        batch_op.drop_index('ix_session_user_expires')
        batch_op.drop_index('ix_session_expires')

    op.drop_table('user_session')
    op.drop_table('shop')
    with op.batch_alter_table('search_metrics', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_search_metrics_user_id'))
        batch_op.drop_index(batch_op.f('ix_search_metrics_query_id'))
        batch_op.drop_index('ix_metrics_user_time')
        batch_op.drop_index('ix_metrics_time')

    op.drop_table('search_metrics')
    with op.batch_alter_table('response_cache', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_response_cache_cache_key'))
        batch_op.drop_index('ix_cache_key_expires')
        batch_op.drop_index('ix_cache_expires')

    op.drop_table('response_cache')
    op.drop_table('company')
    with op.batch_alter_table('app_config', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_app_config_key'))

    op.drop_table('app_config')
    # ### end Alembic commands ###

def data_upgrades() -> None:
    """Add any optional data upgrade migrations here!"""

def data_downgrades() -> None:
    """Add any optional data downgrade migrations here!"""
